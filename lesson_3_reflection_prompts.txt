When would you want to use a remote repository rather than keeping all your work local?
When you'd want to collaborate with people remotely, and even to keep a cloud-based backup of your commits so that in case anything goes wrong you can pull the files to your local machine.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
There might be local changes that you'd have made that you wouldn't want to be lost in case of automatic pull requests. As a developer, you'd know when to pull changes from the remote to the local repo.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Forks: Taken from a different user, a new repository created under your username. Automatically cloned from the forked repo. Works only on GitHub, and not on local branches
Clones: Exact copies of a repo in local workspace. Used when you want to start from the base version of a repo, and want to make different kinds of changes in multiple repositories.
Branches: Used within a repo, and are used to maintain the states of repos, in that some experimental change may be made in a repo which would need to be merged back into the master branch.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
